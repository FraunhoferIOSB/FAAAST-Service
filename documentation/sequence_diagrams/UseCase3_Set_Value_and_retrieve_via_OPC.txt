@startuml
header Page Header
footer Page %page% of %lastpage%
frame Use Case 3 - Set Value and retrieve via OPC
entryspacing 0.9

actor User

box "service"
participant "service\n:Service" as service
end box
box "endpoint"
participant "endpoint\n:HttpEndpoint" as endpoint
end box
box "httpdeserializer"
participant "deserializer\n:HttpDeserializer" as httpdeserializer
end box
box "httpserializer"
participant "serializer\n:HttpSerializer" as httpserializer
end box
box "OPCUAEndpoint"
participant "endpoint\n:OPC UA Endpoint" as OPCUAEndpoint
box "persistence"
participant "persistence\n:InMemoryPersistence" as persistence
end box
box "messagebus"
participant "messageBus\n:MessageBus" as messagebus
end box



User -> service: start()
activate service
service -> OPCUAEndpoint: initialize()
activate OPCUAEndpoint
OPCUAEndpoint -> OPCUAEndpoint:createSubscriptionInfo\nForAllWriteEvents()
OPCUAEndpoint ->messagebus: subscribe(SubscriptionInfo)
activate messagebus
messagebus --> OPCUAEndpoint:
deactivate messagebus
OPCUAEndpoint --> service:
deactivate OPCUAEndpoint

User -> endpoint:HTTP PUT /aas/prop1/value, “NewValue”\n
activate endpoint
endpoint ->httpdeserializer: deserialize(payload)
activate httpdeserializer
httpdeserializer -->endpoint:Msg: SetSubmodel\nElementValueByPath\n
deactivate httpdeserializer
endpoint ->service: handle(msg)
service -> service:handleSetSubmodelElementValue(msg)\n
activate service
service ->service:parseReference(msg)
service ->persistence: get(Reference, msg.OutputModifier)
activate persistence
persistence --> service: Property1: SubmodelElement
deactivate persistence
service -> service: setValue(Property1, “NewValue”)
service ->persistence: put(Reference, Property1)
activate persistence
persistence --> service:
deactivate persistence
service -> messagebus: publish(new ValueChangeEventMessage(new PropertyValue(“test”), new PropertyValue(“NewValue”)))
activate messagebus
messagebus -->service:
deactivate messagebus

group #bbbbbb par
service -> service:createGenericResponse()
service --> endpoint: genericResponse
endpoint-> httpserializer:serialize(genericResponse)
activate httpserializer
httpserializer -->endpoint: httpResponse
deactivate httpserializer
endpoint --> User: response
deactivate endpoint
deactivate service

==par==
note over messagebus: Defined in Handler\nConsumer<EventMessage>\nin SubscriptionInfo

messagebus ->OPCUAEndpoint: updateInternalModel(Referable, newValue)
activate messagebus
activate OPCUAEndpoint
OPCUAEndpoint --> messagebus:
deactivate messagebus
end
User -> OPCUAEndpoint: OPC UA read /aas/prop1/value
OPCUAEndpoint --> User: response
deactivate OPCUAEndpoint
@end